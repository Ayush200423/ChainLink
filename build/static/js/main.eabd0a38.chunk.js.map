{"version":3,"sources":["App.js","index.js"],"names":["App","useState","selected","setSelected","startScan","setStartScan","loadingScan","setLoadingScan","data","setData","handleScan","scanData","console","log","className","onClick","onChange","e","target","value","facingMode","delay","onError","err","error","onScan","style","width","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOA+DeA,EAzDH,WACV,MAAgCC,mBAAS,eAAc,mBAAhDC,EAAQ,KAAEC,EAAW,KAC5B,EAAkCF,oBAAS,GAAM,mBAA1CG,EAAS,KAAEC,EAAY,KAC9B,EAAsCJ,oBAAS,GAAM,mBAA9CK,EAAW,KAAEC,EAAc,KAClC,EAAwBN,mBAAS,IAAG,mBAA7BO,EAAI,KAAEC,EAAO,KAEdC,EAAU,iDAAG,WAAOC,GAAQ,2EAChCJ,GAAe,GACfK,QAAQC,IAAI,mBAAoBF,GAC5BA,GAAyB,KAAbA,IACdC,QAAQC,IAAI,aAAcF,GAC1BF,EAAQE,GACRN,GAAa,GACbE,GAAe,IAEhB,2CACF,gBAVe,sCAchB,OACE,sBAAKO,UAAU,MAAK,UAClB,mDACA,4CAEGZ,KAGH,wBACEa,QAAS,WACPV,GAAcD,EAChB,EAAE,SAEDA,EAAY,YAAc,eAE5BA,GACC,qCACE,yBAAQY,SAAU,SAACC,GAAC,OAAKd,EAAYc,EAAEC,OAAOC,MAAM,EAAC,UACnD,wBAAQA,MAAO,cAAc,yBAC7B,wBAAQA,MAAO,OAAO,6BAExB,cAAC,IAAQ,CACPC,WAAYlB,EACZmB,MAAO,IACPC,QA3BU,SAACC,GACnBX,QAAQY,MAAMD,EAChB,EA0BUE,OAAQf,EAERgB,MAAO,CAAEC,MAAO,cAIrBrB,GAAe,wCACN,KAATE,GAAe,4BAAIA,MAG1B,ECxDMoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAAC,EAAG,MAENJ,E","file":"static/js/main.eabd0a38.chunk.js","sourcesContent":["// versi \"react-qr-reader\" 1.0.0. component API harus disesuaikan dengan yg baru\r\n\r\nimport \"./styles.css\";\r\nimport { useState } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nconst App = () => {\r\n  const [selected, setSelected] = useState(\"environment\");\r\n  const [startScan, setStartScan] = useState(false);\r\n  const [loadingScan, setLoadingScan] = useState(false);\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const handleScan = async (scanData) => {\r\n    setLoadingScan(true);\r\n    console.log(`loaded data data`, scanData);\r\n    if (scanData && scanData !== \"\") {\r\n      console.log(`loaded >>>`, scanData);\r\n      setData(scanData);\r\n      setStartScan(false);\r\n      setLoadingScan(false);\r\n      // setPrecScan(scanData);\r\n    }\r\n  };\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox</h1>\r\n      <h2>\r\n        Last Scan:\r\n        {selected}\r\n      </h2>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setStartScan(!startScan);\r\n        }}\r\n      >\r\n        {startScan ? \"Stop Scan\" : \"Start Scan\"}\r\n      </button>\r\n      {startScan && (\r\n        <>\r\n          <select onChange={(e) => setSelected(e.target.value)}>\r\n            <option value={\"environment\"}>Back Camera</option>\r\n            <option value={\"user\"}>Front Camera</option>\r\n          </select>\r\n          <QrReader\r\n            facingMode={selected}\r\n            delay={1000}\r\n            onError={handleError}\r\n            onScan={handleScan}\r\n            // chooseDeviceId={()=>selected}\r\n            style={{ width: \"300px\" }}\r\n          />\r\n        </>\r\n      )}\r\n      {loadingScan && <p>Loading</p>}\r\n      {data !== \"\" && <p>{data}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}