{"ast":null,"code":"var _jsxFileName = \"/Users/johnborillo/Desktop/chainlink/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QrScanner from 'react-qr-scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QRScanner() {\n  _s();\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const handleScan = data => {\n    if (data) {\n      setResult(data);\n      setScanning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: scanning ? /*#__PURE__*/_jsxDEV(QrScanner, {\n      onError: console.error,\n      onScan: handleScan,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setScanning(true),\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Scanned QR Code: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(QRScanner, \"BEIBcaVPnQPNpIBgpgb1nnRk3uM=\");\n_c = QRScanner;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrScanner","QRScanner","result","setResult","scanning","setScanning","handleScan","data","console","error","width","App"],"sources":["/Users/johnborillo/Desktop/chainlink/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QrScanner from 'react-qr-scanner';\n\nfunction QRScanner() {\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n\n  const handleScan = (data) => {\n    if (data) {\n      setResult(data);\n      setScanning(false);\n    }\n  }\n\n  return (\n    <div>\n      {scanning ? (\n        <QrScanner\n          onError={console.error}\n          onScan={handleScan}\n          style={{ width: '100%' }}\n        />\n      ) : (\n        <div>\n          <button onClick={() => setScanning(true)}>Start Scanning</button>\n          {result && <p>Scanned QR Code: {result}</p>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,kBAAkB;AAAC;AAEzC,SAASC,SAAS,GAAG;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMO,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,EAAE;MACRJ,SAAS,CAACI,IAAI,CAAC;MACfF,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE;IAAA,UACGD,QAAQ,gBACP,QAAC,SAAS;MACR,OAAO,EAAEI,OAAO,CAACC,KAAM;MACvB,MAAM,EAAEH,UAAW;MACnB,KAAK,EAAE;QAAEI,KAAK,EAAE;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACzB,gBAEF;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAML,WAAW,CAAC,IAAI,CAAE;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAS,EAChEH,MAAM,iBAAI;QAAA,WAAG,mBAAiB,EAACA,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAE9C;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA3BQD,SAAS;AAAA,KAATA,SAAS;AA6BlB,eAAeU,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}